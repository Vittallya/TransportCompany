@model IEnumerable<Models.Transit>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<h1>Заявки</h1>

<p>
    <a asp-action="Create">Создать заявку</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Номер договора")
            </th>
            <th>
                @Html.DisplayName("Комментарий")
            </th>
            <th>
                @Html.DisplayName("Дата создания")
            </th>
            <th>
                @Html.DisplayName("Дата получения водителем")
            </th>
            <th>
                @Html.DisplayName("Дата отправки")
            </th>
            <th>
                @Html.DisplayName("Дата получения груза")
            </th>
            <th>
                @Html.DisplayName("Адрес получателя")
            </th>
            <th>
                @Html.DisplayName("ФИО получателя")
            </th>
            <th>
                @Html.DisplayName("Номер телефона получателя")
            </th>
            <th>
                @Html.DisplayName("Статус заявки")
            </th>
            <th>
                @Html.DisplayName("Контрагент")
            </th>
            <th>
                @Html.DisplayName("Техника")
            </th>
            <th>
                @Html.DisplayName("Водитель")
            </th>
            <th>
                @Html.DisplayName("Маршрут")
            </th>
            <th>
                @Html.DisplayName("Груз")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DogorNum)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                <span>@item.DateCreat.ToString("dd.MM.yy")</span>
            </td>
            <td>
                <span>@((int)item.Status >= 1 ? item.DateDriverGiven.ToString("dd.MM.yy") : "_")</span>
            </td>
            <td>
                <span>@((int)item.Status >= 2 ? item.DateSend.ToString("dd.MM.yy") : "_")</span>
            </td>
            <td>
                <span>@((int)item.Status >= 3 ? item.DateGetGruz.ToString("dd.MM.yy") : "_")</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReciverAdress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReciverFio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReciverPhone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink(item.Contragent.Name, "Details", "Contragents", new { id = item.ContragentId, backController = "Transit" })
            </td>
            <td>
                @Html.ActionLink(item.Transp.Mark, "Details", "Transps", new { id = item.TranspId, backController = "Transit" })
            </td>
            <td>
                @Html.ActionLink($"{item.Driver.Surname} {item.Driver.Name} {item.Driver.Otchestvo}", "Details", "Drivers", new { id = item.DriverId, backController = "Transit" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Route.Name)
            </td>
            <td>
                @Html.ActionLink($"{item.Gruz.Weight} (т.)", "GruzDetails", new { id = item.GruzId })
            </td>
            <td>

                @if (item.Status == TransitStatus.Created)                
                    @Html.ActionLink("Ред.", "Edit", new { id = item.Id, gruzId = item.GruzId, transpId = item.TranspId }, new { @class = "btn-link" })
                
                <button class="btn-link" onclick="OnDelete(this)" data-id="@item.Id">Удал.</button>
            </td>
        </tr>
}
    </tbody>
</table>

<div id="confirmDialog" title="Удаление записи" hidden>
    <p>Удалить запись </p>
</div>
<script>


    //document.onload = setTimeout(SetDialog, 25)

    function OnDelete(e) {
        //let value = e.getAttribute("data-state");

        var idVal = $(e).attr("data-id");
        console.log(idVal)

        if (confirm("Удалить?")) {

            $.ajax({
                url: "Transit/Delete",
                type: "POST",
                data: { id: idVal },
                success: function () {
                    e.parentNode.parentNode.remove();
                }
            });
        }
    }

    //function SetDialog() {
    //    $(function () {

    //        $('#bt_del').click(function (e) {
                

    //            //var id = $(this).parent()[0].id;
    //            //console.log('id')
    //            //$('#confirmDialog').data('id', id).dialog('open');
    //        });

    //        //$("#confirmDialog").dialog({
    //        //    autoOpen: false,
    //        //    modal: true,
    //        //    resizable: false,
    //        //    buttons: {
    //        //        "Ok": function () {
    //        //            var id = $(this).data("id");
    //        //            window.location.href = '/Assignments/Delete/' + id;
    //        //        },
    //        //        "Cancel": function (e) {
    //        //            $(this).dialog("close");
    //        //        }
    //        //    },
    //        //});
    //    });
    //}

</script>